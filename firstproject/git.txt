  After you was created repository and upload the project got to
select your repository and click in (Settings) and in left
sidebar and click in (Environment) now click in (New environment)
report the name and click in (Configure environment) now you can
report who can review the pull requests and what time during the
build and (Environment secrets) you can use to report some screte
from AWS or Azure and so non.

  Now click in (Actions) now you can click in (Set up a workflow
yourself) and type the code .yml/.yaml that to make the git flow
now click in (Actions) find and click in the flow name in this
case is (FirstFlow) and click in (Run workflow -> Run workflow)

https://www.youtube.com/playlist?list=PLMFPOLE2cW1yu-FfYiGElIrDqQfKmZGLM

name: FirstFlow # Flow name
# the line below allow workflow only run manually
on:#Triggers
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Run a one-line script
        run: echo Hello world!

  deploy-develop:
    runs-on: ubuntu-latest
    environment:
      name: develop
      url: "urltest.com"
    needs: build
    steps:
      - name: Run a one-line script
        run: echo Deploy dev!

  deploy-homologacao:
    runs-on: ubuntu-latest
    environment:
      name: homologacao
      url: "urltest.com"
    needs: deploy-develop #This mean the homolog depend of the buid develop success to build homolog 
    steps:
      - name: Run a one-line script
        run: echo Deploy homolog!

  deploy-main:
    runs-on: ubuntu-latest
    environment:
      name: Main
      url: "urltest.com"
    needs: deploy-homologacao #This mean the homolog depend of the buid develop success to build homolog 
    steps:
      - name: Run a one-line script
        run: echo Deploy homolog!

#Build after a push
name: FirstFlow # Flow name
on:
  pull_request: #allow build after a push
    types:[labeled]

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Run a one-line script
        run: echo Hello world!

  deploy-develop:
    runs-on: ubuntu-latest
    environment:
      name: develop
      url: "urltest.com"
    needs: build
    steps:
      - name: Run a one-line script
        run: echo Deploy dev!

  deploy-homologacao:
    runs-on: ubuntu-latest
    environment:
      name: homologacao
      url: "urltest.com"
    needs: deploy-develop #This mean the homolog depend of the buid develop success to build homolog 
    steps:
      - name: Run a one-line script
        run: echo Deploy homolog!

  deploy-main:
    runs-on: ubuntu-latest
    environment:
      name: Main
      url: "urltest.com"
    needs: deploy-homologacao #This mean the homolog depend of the buid develop success to build homolog 
    steps:
      - name: Run a one-line script
        run: echo Deploy homolog!

---------------------------------------------------------------------------------------------------------
Create one Action in (Actions > Suggested for this respository > Configure)
name: #name your flow

on: #triggers
  push: #This line means every time you push some change this pepiline will executed
    branches: ["main"] #report here what branchs that you want see the changes 
  pull_request: #It means every time you create a pullrequest to main this pipeline wll executed
    branches: ["main"]
  
  workflow_dispatch: #this allow dispatch button when you want clicking this button

jobs:
  build:
    runs-on: ubuntu latest
    steps:
      #Checks-out your repository under $GUITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      #Run only one code line
      - name: Run a one-line script
        run: echo Hello world
      - name: Run a multi-line script
        run:
          echo Hello world 1!
          echo Hello world 2!

If you want to use some existing configuration select at the right side in the (Marketplace) tab search by the
tecnology that you want, clicked in it and copy below the code above as an exemple